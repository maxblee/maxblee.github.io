{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["d3","require","MortalityTable","props","fileName","state","data","countries","max_mortality","undefined","min_mortality","years","circleRange","scaleLinear","maxRadius","minRadius","toolTipMouseOver","bind","toolTipMouseOut","renderCircle","fetch","this","then","res","json","setState","domain","range","catch","e","console","error","event","dataRow","target","getAttribute","dataColumn","select","style","pageY","pageX","text","_e","circleSize","circleTranslation","role","width","height","transform","data-row","data-column","className","r","onMouseOver","onMouseOut","aria-hidden","cx","cy","map","year","idx","key","id","country","dataCell","dataIdx","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c601ce98.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nconst d3 = require(\"d3\");\n\nclass MortalityTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileName = props.fileName;\n    this.state = {\n      data: {\n        data: [],\n        countries: [],\n        max_mortality: undefined,\n        min_mortality: undefined,\n        years: []\n      },\n      circleRange: d3.scaleLinear(),\n      maxRadius: 25,\n      minRadius: 0.2,\n    };\n\n    this.toolTipMouseOver = this.toolTipMouseOver.bind(this)\n    this.toolTipMouseOut = this.toolTipMouseOut.bind(this)\n    this.renderCircle = this.renderCircle.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(this.fileName)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({data: json})\n        this.setState({\n          circleRange: d3.scaleLinear()\n            .domain([json.min_mortality, json.max_mortality])\n            .range([this.state.minRadius, this.state.maxRadius])\n        })\n      })\n      .catch((e) => {console.error(e);});\n  }\n\n  toolTipMouseOver(event) {\n    const dataRow = event.target.getAttribute(\"data-row\")\n                const dataColumn = event.target.getAttribute(\"data-column\")\n                d3.select(\"#tooltip\")\n                  .style(\"display\", \"block\")\n                  .style(\"top\", `${event.pageY}px`)\n                  .style(\"left\", `${event.pageX}px`)\n                d3.select(\"#tooltip-country\")\n                  .text(this.state.data.countries[dataRow])\n                d3.select(\"#tooltip-rate\")\n                  .text(this.state.data.data[dataRow][dataColumn])\n  }\n\n  toolTipMouseOut(_e) {\n      d3.select(\"#tooltip\").style(\"display\", \"none\")\n  }\n\n  renderCircle(circleSize, dataRow, dataColumn) {\n    const circleTranslation = `translate(${this.state.maxRadius + 5}, ${this.state.maxRadius + 5})`\n    return (\n      <svg role=\"img\" width={this.state.maxRadius * 2 + 10} height={this.state.maxRadius * 2 + 10}>\n        <title>{circleSize} maternal deaths per 100,000 live births</title>\n        <g transform={circleTranslation}>\n          <circle\n            data-row={dataRow} data-column={dataColumn} className=\"gfx__circle gfx__data\"\n            r={this.state.circleRange(circleSize)} onMouseOver={this.toolTipMouseOver} onMouseOut={this.toolTipMouseOut}>\n          </circle>\n        </g>\n      </svg>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"gfx__legend\" aria-hidden=\"true\">\n          <svg width=\"125\" height=\"90\">\n            <text transform=\"translate(35,80)\">{this.state.data.min_mortality}</text>\n            <circle className=\"gfx__circle\" cx={this.state.maxRadius + 10} cy={this.state.maxRadius + 10} r={this.state.minRadius}></circle>\n          </svg>\n          <svg width=\"125\" height=\"90\">\n            <text transform=\"translate(20,80)\">{this.state.data.max_mortality}</text>\n            <circle className=\"gfx__circle\" cx={this.state.maxRadius + 10} cy={this.state.maxRadius + 10} r={this.state.maxRadius}></circle>\n          </svg>\n          <div>Maternal deaths per 100,000 live births.</div>\n          <div className=\"gfx__credit\">Source: World Bank Gender Data</div>\n        </div>\n        <table>\n        <thead>\n          <tr>\n          <th>Country</th>\n          {this.state.data.years.map((year, idx) => (<th key={idx}>{year}</th>))}\n          </tr>\n        </thead>\n        <tbody id=\"mortality-table\">\n          {this.state.data.countries.map((country, idx) => {\n              return (<tr key={country}>\n                <td className=\"country-selection\"><b>{country}</b></td>\n                {this.state.data.data[idx].map((dataCell, dataIdx) => <td>{this.renderCircle(dataCell, idx, dataIdx)}</td>)}\n              </tr>)\n          })}\n        </tbody>\n      </table>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Maternal Mortality Across the World</h1>\n      <h2>Income</h2>\n      <p>Maternal mortality rates are far worse in lower-income countries than they\n        are in higher-income countries. While some countries like Norway have had\n        mortality rates as low as 2 maternal deaths for every 100,000 live births,\n        Chad, Sierra Leone, and South Sudan have consistently had maternal mortality\n        rates of 1,000 deaths per 100,000 live births.\n      </p>\n      <MortalityTable fileName=\"./income.json\"></MortalityTable>\n      <h2>Decreasing Mortality</h2>\n      <p>Still, some countries have had substantial improvements. Overall, maternal\n        mortality slightly decreased from 2011 to 2017. And some countries like Afghanistan\n        saw nearly 30 percent decreases in maternal mortality rates.\n      </p>\n      <MortalityTable fileName=\"./decreasing-mortality.json\"></MortalityTable>\n      <div id=\"tooltip\">\n        <p><span id=\"tooltip-country\"></span></p>\n        <p><span id=\"tooltip-rate\"></span> maternal deaths per 100,000 live births.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}